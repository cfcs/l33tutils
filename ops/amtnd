#!/bin/sh
# auto-motion daemon
# Monitor xscreensaver(1) and run motion(1) when the former is active.
# Optionally mount something to motion's target_dir during monitoring.

###############################################################################
# user settings
###############################################################################

# File defining mount point presets.
#
# Each line is of the form '<source_name>\t<mount_command>'.
#   <source_name> is a user-specified name
#   <mount_command> is a shell snippet
#
# We run '<mount_command> $BIND_OPTS <target_dir>' to execute the mount
#   <mount_command> corresponds to the <source_name> we select (see $BIND_SRC)
#   <target_dir> is read from motion's config file, $MOTION_CONF
#
BIND_PRST="/usr/local/etc/amtnd.bind"

# <source_name> from the presets file to select
# If empty, we look for a line matching '-\t<source_name>' and use that.
BIND_SRC=

# Mount options to apply to every bind definition
BIND_OPTS="-o nonempty"

###############################################################################
# system vars, for devs
###############################################################################

PIDDIR="/var/run/motion"
XSCREEN_WATCH="xscreensaver-command -watch"
XSCREEN_CTRL="$(which xscreensaver-command)"
MOTION_CTRL="/etc/init.d/motion"
MOTION_CONF="/etc/motion/motion.conf"

# TODO: split up into control (init.d), daemon, and default scripts

USAGE="Usage: $0 {start|stop|restart|status}\n       $0 -p PIDFILE -l LOGFILE"

exit_syn() { echo "$USAGE"; exit 2; }

while getopts p:l: f; do
	case $f in
	p ) PIDFILE="$OPTARG";;
	l ) LOGFILE="$OPTARG";;
	\? ) exit_syn;;
	esac
done
shift $(expr $OPTIND - 1)

###############################################################################
# daemon control
###############################################################################

# Read an entry from the bind presets
bind_prst_read() { grep -m1 ^"$1" "$2" | cut '-d	' -f2; }

# Read and execute a binding for the motion target_dir
mtn_bind() {
	local bind_file="$1"

	local bind_dir="$(eval echo $(grep -m1 '^target_dir' $MOTION_CONF | cut -b12-))"
	if [ -z "$bind_dir" ]; then echo "target_dir not defined in motion.conf!"; exit 1; fi

	local amtnd_bind="$2" bind_cmd=""
	if [ -z "$amtnd_bind" ]; then amtnd_bind="$(bind_prst_read - "$BIND_PRST")"; fi
	if [ -n "$amtnd_bind" ]; then bind_cmd="$(bind_prst_read "$amtnd_bind" "$BIND_PRST")"; fi

	if [ -z "$bind_cmd" ]; then
		rm -f "$bind_file"
	elif $bind_cmd $BIND_OPTS "$bind_dir"; then
		echo "bound $bind_dir as $bind_cmd"
		echo "$bind_dir" > "$bind_file"
	else
		echo "failed to bind $bind_dir"
	fi
}

# Drop a previously-created binding
mtn_drop() {
	local bind_file="$1"
	if ! [ -f "$bind_file" ]; then return; fi

	local bind_dir="$(cat "$bind_file")"
	if ! [ -d "$bind_dir" ]; then return; fi

	if umount -d "$bind_dir"; then
		echo "unbound $bind_dir"
	else
		echo "failed to unbind $bind_dir"
	fi
}

# Restart motion, executing some intermediate commands
mtn_restart() {
	if pgrep motion >&- && $MOTION_CTRL stop; then "$@"; $MOTION_CTRL start; else "$@"; fi
}

## daemon control section

if [ -z "$PIDFILE" -a -z "$LOGFILE" ]; then
	if [ -z "$1" ]; then exit_syn; fi

	mkdir -p "$PIDDIR"
	PIDFILE="$PIDDIR/amtnd.pid"
	BINDFILE="$PIDDIR/amtnd.bind"
	LOGFILE="$PIDDIR/amtnd.log"

	RETURN=1
	case $1 in
	start )
		if start-stop-daemon -v -p "$PIDFILE" -S -x "$XSCREEN_CTRL" -N 10 -b -a "$(readlink -f "$0")" -- -p "$PIDFILE" -l "$LOGFILE"; then
			mtn_restart mtn_bind "$BINDFILE" "$BIND_SRC"
			RETURN=0
		fi
		;;
	stop )
		if start-stop-daemon -v -p "$PIDFILE" -K -x "$XSCREEN_CTRL"; then
			mtn_restart mtn_drop "$BINDFILE"
			RETURN=0
		fi
		;;
	restart )
		"$0" stop
		if "$0" start; then RETURN=0; fi
		;;
	status )
		PID="$(cat "$PIDFILE" 2>&-)"
		if [ -z "$PID" ]; then pref="not ";
		elif [ "$(ps -o cmd -p "$PID" --no-headers)" = "$XSCREEN_WATCH" ]; then suff=" ($PID)"; RETURN=0; else pref="not "; fi
		echo "auto-motion is ${pref}running${suff}."
		;;
	* )
		exit_syn
		;;
	esac
	exit $RETURN
fi

###############################################################################
# xscreensaver monitor
###############################################################################

if [ -z "$PIDFILE" -o -z "$LOGFILE" ]; then exit_syn; fi
if [ -n "$1" ]; then exit_syn; fi

{ $XSCREEN_WATCH & echo $! > "$PIDFILE"; } | while read CMD ARGS; do
	case $CMD in
	BLANK | LOCK )
		echo ">>>" "$CMD" "$ARGS"
		$MOTION_CTRL start
		;;
	UNBLANK )
		echo ">>>" "$CMD" "$ARGS"
		$MOTION_CTRL stop
		;;
	RUN )
		# pass, don't echo
		;;
	* )
		echo ">>>" "$CMD" "$ARGS"
		;;
	esac
done >>"$LOGFILE"
