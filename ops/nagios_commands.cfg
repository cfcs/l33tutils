################################################################################
# NOTIFICATION COMMANDS
################################################################################

# All the below commands take the following arguments:
#
# ARG1: min_interval, for throttle
# ARG2: max_interval, for throttle
# ARG3: power_factor, for throttle


# Polynomial backoff notify service events by email.
# Requires /usr/local/bin/throttle.
#
# The sender must be defined in .mailrc in the same directory as nagios.cfg
# WARNING: delivery will likely fail silently if you do not do this!!!
define command{
	command_name	throttle-notify-host-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/local/bin/throttle -a$ARG1$ -b$ARG2$ -p$ARG3$ $TEMPPATH$/nagios-$PROCESSSTARTTIME$-throttle-$CONTACTNAME$-email_host-event-$HOSTEVENTID$ /usr/bin/env MAILRC=`dirname $MAINCONFIGFILE$`/.mailrc /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
	}

# Polynomial backoff notify service events by email.
# Requires /usr/local/bin/throttle.
#
# The sender must be defined in .mailrc in the same directory as nagios.cfg
# WARNING: delivery will likely fail silently if you do not do this!!!
define command{
	command_name	throttle-notify-service-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n" | /usr/local/bin/throttle -a$ARG1$ -b$ARG2$ -p$ARG3$ $TEMPPATH$/nagios-$PROCESSSTARTTIME$-throttle-$CONTACTNAME$-email_service-event-$SERVICEEVENTID$ /usr/bin/env MAILRC=`dirname $MAINCONFIGFILE$`/.mailrc /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
	}

# Polynomial-backoff-notify host events by XMPP.
# Requires /usr/local/bin/throttle and /usr/bin/sendxmpp.
#
# The sender must be defined in .sendxmpprc in the same directory as nagios.cfg and
# it and the recipient must have each other on their contact list.
# WARNING: delivery will likely fail silently if you do not do this!!!
define command{
	command_name	throttle-notify-host-by-xmpp
	command_line	/usr/bin/printf "%b" "$NOTIFICATIONTYPE$: $HOSTNAME$ $HOSTADDRESS$ is $HOSTSTATE$ @ $SHORTDATETIME$: $HOSTOUTPUT$\n" | /usr/local/bin/throttle -a$ARG1$ -b$ARG2$ -p$ARG3$ $TEMPPATH$/nagios-$PROCESSSTARTTIME$-throttle-$CONTACTNAME$-xmpp_host-event-$HOSTEVENTID$ /usr/bin/sendxmpp -t -f `dirname $MAINCONFIGFILE$`/.sendxmpprc $CONTACTPAGER$
	}

# Polynomial-backoff-notify service events by XMPP.
# Requires /usr/local/bin/throttle and /usr/bin/sendxmpp.
#
# The sender must be defined in .sendxmpprc in the same directory as nagios.cfg and
# it and the recipient must have each other on their contact list.
# WARNING: delivery will likely fail silently if you do not do this!!!
define command{
	command_name	throttle-notify-service-by-xmpp
	command_line	/usr/bin/printf "%b" "$NOTIFICATIONTYPE$: $SERVICEDESC$ on $HOSTALIAS$ $HOSTADDRESS$ is $SERVICESTATE$ @ $SHORTDATETIME$: $SERVICEOUTPUT$\n" | /usr/local/bin/throttle -a$ARG1$ -b$ARG2$ -p$ARG3$ $TEMPPATH$/nagios-$PROCESSSTARTTIME$-throttle-$CONTACTNAME$-xmpp_service-event-$SERVICEEVENTID$ /usr/bin/sendxmpp -t -f `dirname $MAINCONFIGFILE$`/.sendxmpprc $CONTACTPAGER$
	}


################################################################################
# SERVICE CHECK COMMANDS
################################################################################

# check_smtp that allows one to specify the port of the SMTP server
# ARG1: host port
define command {
	command_name    check_smtp_port
	command_line    /usr/lib/nagios/plugins/check_smtp -H '$HOSTADDRESS$' -p '$ARG1$'
}

# Requires /usr/local/bin/check_apcupsd
define command {
	command_name check_apcupsd
	command_line /usr/local/bin/check_apcupsd -w $ARG2$ -c $ARG3$ $ARG1$
}

# Requires /usr/local/bin/check_apcupsd
define command {
	command_name check_apcupsd_no_notify
	command_line /usr/local/bin/check_apcupsd $ARG1$
}

# Requires /usr/sbin/send_nsca
# Any encryption keys must be defined in .send_nsca in the same directory as nagios.cfg
define command {
	command_name send_nsca
	command_line echo "$ARG3$ $ARG4$ 0 OK" | /usr/sbin/send_nsca -H $ARG1$ -p $ARG2$ -d ' ' -c `dirname $MAINCONFIGFILE$`/.send_nsca
}
