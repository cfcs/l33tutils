#!/bin/sh
# auto-motion daemon
# Monitor xscreensaver(1) and run motion(1) when the former is active.
# May be run as a systemd Type=simple service.

XSCREEN_WATCH="xscreensaver-command -watch"
MOTION_CTRL="/etc/init.d/motion"
DISPLAY="${DISPLAY:-:0.0}" # what xscreensaver-command defaults to

find_xscreensaver_pid() {
	local found_one=false
	local pid=
	for cand in $(pgrep '\bxscreensaver$'); do
		local display="$(xargs -n1 -0 < /proc/$cand/environ | grep '^DISPLAY=')"
		if [ "$display" = "DISPLAY=$DISPLAY" ]; then
			if $found_one; then
				echo >&2 "FIND failed: found two xscreensavers on display $DISPLAY ??: $pid $cand"
				return 1
			fi
			pid="$cand"
			found_one=true
		fi
	done
	if $found_one; then
		echo "$pid"
	else
		echo >&2 "FIND failed: couldn't find suitable xscreensaver"
		return 1
	fi
}

guess_xauthority() {
	local pid="$(find_xscreensaver_pid)"
	test -z "$pid" && return 1
	eval home="~$(ps -o user= "$pid")"
	echo "$home/.Xauthority"
}

watch() {
	local interval="$1"
	local xauthority="${XAUTHORITY:-$(guess_xauthority)}"
    echo "WATCH DISPLAY=$DISPLAY XAUTHORITY=$xauthority $XSCREEN_WATCH"
	{ if ! DISPLAY="$DISPLAY" XAUTHORITY="$xauthority" $XSCREEN_WATCH; then
            echo "WATCH failed, sleep $interval;"
            sleep $interval
    fi } | while read CMD ARGS; do
        case $CMD in
        BLANK | LOCK )
            echo "$CMD" "$ARGS"
            $MOTION_CTRL start
            ;;
        UNBLANK )
            echo "$CMD" "$ARGS"
            $MOTION_CTRL stop
            ;;
        RUN )
            # pass, don't echo
            ;;
        * )
            echo "???" "$CMD" "$ARGS"
            ;;
        esac
    done
}

while true; do
	watch 16
done
